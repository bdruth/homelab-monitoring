name: Homelab Monitoring

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  schedule:
    # Run every hour
    - cron: '0 * * * *'

jobs:
  test:
    name: Run Monitoring Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Unlock git-crypt
        uses: sliteteam/github-action-git-crypt-unlock@1.3.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Playwright browsers
        run: yarn playwright install chromium --with-deps

      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          load-mode: strict

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AUTH_USERNAME: op://${{ env.SERVICE_ACCOUNT_VAULT }}/${{ env.SERVICE_ACCOUNT_ITEM }}/username
          AUTH_PASSWORD: op://${{ env.SERVICE_ACCOUNT_VAULT }}/${{ env.SERVICE_ACCOUNT_ITEM }}/password
          AUTH_TOTP: op://${{ env.SERVICE_ACCOUNT_VAULT }}/${{ env.SERVICE_ACCOUNT_ITEM }}/one-time password?attribute=otp
        with:
          export-env: true

      - name: Run Playwright tests
        id: playwright-test
        run: yarn test
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/
          retention-days: 7

      - name: Install jq
        run: |
          LATEST_JQ_VERSION=$(curl -s https://api.github.com/repos/jqlang/jq/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            JQ_ARCH="amd64"
          elif [ "$ARCH" = "aarch64" ]; then
            JQ_ARCH="arm64"
          else
            echo "Unsupported architecture: $ARCH"
            exit 1
          fi
          curl -L "https://github.com/jqlang/jq/releases/download/${LATEST_JQ_VERSION}/jq-linux-${JQ_ARCH}" -o /usr/local/bin/jq
          chmod +x /usr/local/bin/jq

      - name: Parse test results
        id: test-results
        if: steps.playwright-test.outcome == 'failure'
        run: |
          jq '.suites[].specs[] | .title + ":" + .tests[].results[].status' test-results/test-results.json > test-results/results.txt
          FAILED_TESTS=$(grep -o "Dashboard application health check.*failed" test-results/results.txt || echo "")
          if [[ -n "$FAILED_TESTS" ]]; then
            echo "app_failure=dashboard" >> "$GITHUB_OUTPUT"
          fi

          FAILED_TESTS=$(grep -o "Indexer application health check.*failed" test-results/results.txt || echo "")
          if [[ -n "$FAILED_TESTS" ]]; then
            echo "app_failure=indexer" >> "$GITHUB_OUTPUT"
          fi

      - name: Send application test failure notification
        uses: umahmood/pushover-actions@main
        if: steps.test-results.outputs.app_failure
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
        with:
          status: 'failed'
          title: '${{ steps.test-results.outputs.app_failure }} monitoring'
          message: ${{ steps.test-results.outputs.app_failure == 'dashboard' && 'Dashboard' || 'Indexer' }} application monitoring failed

      - name: Send workflow failure notification
        uses: umahmood/pushover-actions@main
        if: failure() && steps.test-results.outcome != 'failure'
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
        with:
          status: ${{ job.status }}
          title: 'Homelab Monitoring'
          message: 'Workflow failed - ${{ github.actor }}'

      - name: Final status check
        if: steps.playwright-test.outcome == 'failure'
        run: exit 1
